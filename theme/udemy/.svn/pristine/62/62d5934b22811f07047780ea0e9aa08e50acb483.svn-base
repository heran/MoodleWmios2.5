/**
* course category node
*
* @param id
* @param name
*/
function category(id,name){

    /**
    * category's id
    *
    * @type {int}
    */
    this.id = id;

    /**
    * category's name
    *
    * @type {string}
    */
    this.name = name;

    /**
    * category's parent
    *
    * @type {category}
    */
    this.parent = null;

    /**
    * category's children
    *
    * @type {category[]}
    */
    this.children=[];

    /**
    * add child
    *
    * @param {category} child
    * @returns {bool}
    */
    this.add_child = function(child){
        if(!this.has_child(child)){
            this.children.push(child);
            child.parent = this;
        }
    }

    /**
    * remove one child
    *
    * @param {category} child
    * @returns {category[]} old children list
    */
    this.remove_child = function(child){
        return this.children.splice(this.get_child_index(child),1);
    }

    /**
    * True if has a child
    *
    * @param {category} child
    * @returns {bool}
    */
    this.has_child = function(child){
        return this.get_child_index(child) !== false;
    }

    /**
    * where the child in the children list
    *
    * @param {category} child
    * @returns {int}
    */
    this.get_child_index = function(child){
        for (var i = 0; i < this.children.length; i++) {
            if (this.children[i].id == child.id) {
                return i;
            }
        }
        return false;
    }

    /**
    * @param {string} name
    * @returns {null|category}
    */
    this.get_child_by_name = function(name){
        for(var i in this.children){
            if(this.children[i].name == name){
                return this.children[i];
            }
        }
        return null;
    }

    /**
    * @param {category} root
    * @param {string[]} names
    * @returns {null|category} this.parent
    */
    this.match_parent = function(root, names){
        var parent = root;
        if(names.length){
            for(var i=0; i<names.length ; i++){
                parent = parent.get_child_by_name($.trim(names[i]));
                if(!parent){
                    break;
                }
            }
            if(!parent){
                parent = root;
            }
        }
        parent.add_child(this);
        return parent;
    }
}
$(function(){


    //must browse coruses.
    if($.getUrlVar('browse') !== 'courses'){
        return ;
    }

    /**
    * create category root
    *
    * @returns {category}
    */
    function make_course_category(){
        var rootname = M.util.get_string('all_a_category','theme_udemy',M.util.get_string('category','core'));
        var category_root = new category(0,rootname);
        $('select[name=categoryid] option').each(function(i,n){
            var names = $($(n).text().split('/')).map(function(){
                return $.trim(this);
            });
            var name = names[names.length-1] + '';
            var id = $(n).val()-0;
            var node = new category(id, name);
            names.splice(names.length-1,1);
            var parent = node.match_parent(category_root, names);
        });
        return category_root;
    }

    /**
    * find one category with it's parent
    *
    * @param {category} node
    * @param {int} cat_id
    */
    function find_course_category(node, cat_id){
        if(node.id == cat_id){
            return node;
        }else if(!node.children.length){
            return null;
        }else{
            for(var i in node.children){
                var cat = find_course_category(node.children[i], cat_id);
                if(cat){
                    return cat;
                }
            }
            return null;
        }
    }

    var cat_root = make_course_category();

    Handlebars.registerHelper('down_nav',function(cats){
        var rec = function(cats){
            var content = '';
            if(cats.length){
                content += '<ul>';
                for(var i in cats){
                    var child = cats[i];
                    content += '<li><a categoryid="'+child.id+'">'+child.name+'</a>'+rec(child.children)+'</li>';
                }
                content += '</ul>';
            }
            return content;
        }
        return rec(cats);
    });

    var nav_li_template = Handlebars.compile($('#discovery-navigation-li').html());

    var course_li_template = Handlebars.compile($('#discover-courses-list-li').html());

    var paging = {};
    paging.current = $('.paging a.current').html()-1;
    if($('.paging .last').length){
        paging.max = $.getUrlVar('page',$('.paging .last').attr('href'));
    }else if($('.paging .next').length){
        var tmpl = $('.paging a').length;
        paging.max = $.getUrlVar('page',$($('.paging a').get(tmpl-2)).attr('href'));
    }else{
        paging.max = paging.current;
    }
    if($('.paging .first').length){
        paging.min = $.getUrlVar('page',$('.paging .first').attr('href'));
    }else if($('.paging .previous').length){
        paging.min = $.getUrlVar('page',$($('.paging a').get(1)).attr('href'));
    }else{
        paging.min = paging.current;
    }



    var refresh_course_list = function(current_cat_id, page_num){
        if( !current_cat_id){
            return;
        }

        var current_cat = find_course_category(cat_root, current_cat_id);

        //navigation
        if($('.discovery-navigation>li').length>1){
            var n_l = $('.discovery-navigation>li').length;
            $('.discovery-navigation>li').each(function(i,n){
                if(i<n_l-1){
                    $(n).remove();
                }
            });
        }
        var current_li = nav_li_template(current_cat);
        $('.discovery-navigation').prepend($($.trim(current_li)).addClass('on'));
        //$('.discovery-navigation').prepend(nav_li_template(cat_root));
        var parent_cat = current_cat;
        while(parent_cat = parent_cat.parent){
            $('.discovery-navigation').prepend(nav_li_template(parent_cat));
        }


        //course_list
        var courses = [];
        var display_course_list = function(i,n){
            var  course = {};
            course.name = $(n).find('.info>.name>a').text();
            course.url = $(n).find('.info>.name>a').attr('href');
            course.enrols = [];
            course.enrol_self = false;
            $(n).find('.enrolmenticons img').each(function(ei,en){
                var component = $.getUrlVar('component',$(en).attr('src'));
                course.enrols.push(component);
                if(component === 'enrol_self'){
                    course.enrol_self = true;
                }
            });
            course.summary = $(n).find('.content>.summary');
            course.cover = $(n).find('.content>.courseimage>img').attr('src');
            course.teachers = [];
            $(n).find('.content>.teachers>li').each(function(ti,tn){
                course.teachers.push({text:$(tn).text(),url:$(tn).find('a').attr('href')});
            });
            $('.discover-courses-list').prepend(course_li_template(course));
            courses.push(course);
        };
        if((typeof page_num === 'undefined' || page_num=== null)&& $('.coursebox').length){
            $('.coursebox').each(display_course_list);
        }else{
            var params = {categoryid:current_cat_id,browse:'courses',page:page_num};
            $('.discover-courses-list').html('');
            $.get(M.cfg.wwwroot+'/course/index.php',params,function(data){
                $(data).find('.coursebox').each(display_course_list);
            })
        }
    }

    var current_cat_id = $.getUrlVar('categoryid')-0;

    refresh_course_list(current_cat_id);

    $(document).on('click','.course-nav-btn.prev,.course-nav-btn.next',function(e){
        var is_prev = $(e.currentTarget).hasClass('prev');
        if((is_prev && paging.current == paging.min) || (!is_prev && paging.current == paging.max)){
            return;
        }
        if(is_prev){
            paging.current--;
        }else{
            paging.current++;
        }
        refresh_course_list(current_cat_id, paging.current);
    })


});